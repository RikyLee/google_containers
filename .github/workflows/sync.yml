name: sync k8s.gcr.io

on:
  push:
    branches:
     - test
     - master
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 18 * * *'

jobs:
  sync:
    name: sync
    env:
      DOCKER_PASS: ${{ secrets.DOCKER_HUB_PASS }}
      DOCKER_USER: ${{ secrets.DOCKER_HUB_USER }}
      ALY_USER: ${{ secrets.ALY_USER }}
      ALY_PASS: ${{ secrets.ALY_PASS }}
      TMOUT: 48h
      PROCESS: 4
    runs-on: ubuntu-latest
    timeout-minutes: 17280
    continue-on-error: true
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: install docker
      uses: docker-practice/actions-setup-docker@master

    - name: before_script
      run: |
        bash build/build.sh build
        bash .github/scripts/ci-before.sh
        ls -alh ${HOME}/sync/
        ${HOME}/sync/imgsync sum ${HOME}/sync/bolt.db | wc -l
      env:
        CGO_ENABLED: 0
    - name: sync run
      id: sync
      continue-on-error: true
      timeout-minutes: 17280
      run: |
        sudo \
          ${HOME}/sync/imgsync sync \
          --db ${HOME}/sync/bolt.db \
          --push-to registry.cn-hangzhou.aliyuncs.com \
          --password ${ALY_PASS}  \
          --push-ns=riky_k8s  \
          --user 740985173@qq.com  \
          --command-timeout 48h  \
          --process-limit ${PROCESS:=2} \
          --img-timeout ${IMG_TMOUT:=10m} \
          --live-interval ${LIVE:=9m20s}  \
          --login-retry ${LOGIN_RETRY:=5} \
          --debug=${DEBUG:=false}
    - name: after_success
      run: |
        bash .github/scripts/ci-after.sh
        ls -alh ${HOME}/sync/
        ${HOME}/sync/imgsync sum ${HOME}/sync/bolt.db | wc -l
      if: steps.sync.outcome == 'success'
    - name: after_failure
      continue-on-error: true
      run: |
        bash .github/scripts/ci-after.sh
        ls -alh ${HOME}/sync/
      if: steps.sync.outcome != 'success'
